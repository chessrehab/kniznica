ls -alFi			(a:shows all info,F: with slashes for directory,l: longlist,i:inode numbers)
/etc/.profile			(initial file with settings)
/home/user/.profile		(initial file with user related settings)
/home/user/.bashrc		(file run from .profile with settings)
printenv (or env)		(global global env variables)
printenv VAR			(shows a value of a global env variable)
echo $VAR			(prints a variable)
set				(prints local variables, including global)
unset VAR			(unsets a variable)
export VAR			(exportd local variable to global)
cp -i				(copying with confirmations)
ln -s FILE1 FILE2		(symbolic link FILE1 that points to file FILE2, different inode nrs)
ln FILE1 FILE2			(hard link, same inode nr)
mv FILE1 FILE2			(rename or move file1 to file2)
rm -i				(removing with confirmation)
rm -r				(removing directory recursively)
mkdir				(create directory)
rmdir				(remove directory)
tree DIR			(tree structure of a directory)
file FILE			(shows content type of a file or dir)
cat -bn FILE			(viewing file contents with line nrs and hiding empty)
tail -n NR			(showing last NR lines)
head -NR			(showing first NR lines)
ps -C PROC			(showing the processes listed in PROC..)
ps -e				(all processes)
ps -elF				(all processes, long lins, extra full output)
ps -H				(creates hierarchy in the display)
ps -o COLUMN			(only specific column)
ps -N				(negative of specification)
ps -u				(processes of users in a list)
ps al				(BSD style with extra info on status)
ps ax				(BSD style with extra info on status and x: all processes)
ps --forest			(GNU tree format)
top				(coolest, realtime process tracking app)
kill PID			(sends TERM signal to a process)
kill -s SIG PID			(sends a signal SIG to a proces PID :signals: HUP,INT,QUIT,KILL,SEGV,TERM,STOP,TSTP,CONT)
killall NAME*			(kills a group of processes by names and wildcards)
pkill PROCNAME			(kills process stated by its name)
mount				(shows mounted devices)
mount -t TYPE DEV DIR		(mounts device DEV to directory DIR with type TYPE that the device is formatted for -vfat,NTFS,iso9660)
mount -v			(verbose mount)
mount -r			(mounts the device as read only)
mount -w			(rw mount)
mount -a			(mount all as defined in /etc/fstab file..especially after editing it)
umount DIR			(unmounts the mounted directory/if not busy)
df -Th				(T: includes FS type, h:human readable size formats of diskspace usage of devices, also good for listing the devices)
lsblk				(lists block devices)
du -ch				(human readable size formats with grand totals at the end....shows files)
du -s DIR			(summa of disk usage in DIR)
sort -n				(sorts the file output including numbering sort)
sort -nr			(r sorts in reverse)
sort -t SEPAR -k POS		(sorts based on POS. field, SEPAR acts as delimiter)
grep PATT FILE			(searches in file and outputs only rows that fit the pattern)
grep ^PATT FILE			(searches for lines that start with PATT in FILE)
grep -vn			(v- reverse pattern search, n- displays line numbers)
grep -c				(counts the search outputs)
grep -rn DIR -e "PATTERN"	(recursive search in files within DIR for PATTERN)
gzip FILE*			(zip g the file or files)
zcat FILE*			(display (cat) the gzipped file)
gunzip FILE*			(gunzips the gz file*)
zip ARCHIV FILES*		(zip file* to archiv)
unzip -d DIR ARCHIV		(unzips archiv into DIR directory)
tar -cvf ARCH.tar FILE* DIR*	(Tars the file* and dir* into arch)
tar -xvf ARCH			(Untars arch)
tar -rvf ARCH.tar FILE* DIR*	(r appends file* to arch)
tar -cvzf ARCH.tar FILE* DIR*   (Creates tar archive and also zips the archive)
(cmd;cmd;....)			(subshell run commands)
(cmd;cmd;....)&			(start a subshell that will run in the background)
sleep 10&			(sleeps the proces for 10s in background mode)
jobs -l				(shows background running processes, -l shows the PID)
coproc NAME { cmd;...; }	(starts a process in the background executing cmds)
which CMD			(shopws the origin of the command)
type CMD			(shows a type of a command)
history				(history of commands)
!!				(previous command)
!NR				(command nr NR from history list)
alias ALIAS='cmd'		(creates an alias for a command)
useradd -D			(defaults set for adding user)
/etc/skel			(directory with hoe dir template files)\
useradd -m NEWUSER		(adding new user m-creates the home directory)
useradd -r SYSUSER		(creating system user)
passwd USER			(set password for a user, with sudo)
passwd -e USER			(expire password for a user)
userdel -r USER			(removes a user including his home dir and mail dir)
usermod -L USER			(locks the account)
usermod -U USER			(unlocks the user account)
groups USER			(lists the groups user is a member of)
groupadd NWGROUP		(create new group)
chmod XXX FILE			(change permission bitflags on the FILE to XXX)
chmod a+x FILE			(give all execution rights on the FILE)
chmod a=rwx FILE		(give all permissions to all on the file)
chmod ugo+rwx			(give permissions to user,group,others...all of thewm (rwx))
chmod YXXX			(change saved user/group id on the file plus sticky bit)
umask				(shows the default umask)
umask YXXX			(setst the umask)			
adduser USER GROUP		(add user to a group)
chage -d 0 USER			(force password to expire on login for USER)
chgrp USER FILE			(change group of the FILE to USER)
chown USER FILE			(change owner of the FILE to USER)
uptime				(info about uptime of the system)
nano -c FILE			(nano editor with line numbers)
systemctl status		(all services in tree like view)
systemctl status SERVICE	(status of SERVICE service)
systemctl start SERVICE		(start SERVICE, also use stop, restart)
systemctl get-default		(hows the default target for booting)
systemctl set-default DF	(sets the default target for booting)
systemctl list-units --type=target (shows system targets)
hostnamectl set-hostname HN	(set a new hostname)
date				(shows date and time)
apt update			(refreshes dependencies and package links in repository)
apt upgrade			(refreshes all installed packages)
apt install PACK		(install package PACK)
apt-get install PACK		(install package PACK)
apt search PACK			(search for package PACK)
apt-cache search PACK		(search for package PACK)
apt remove PACK			(remove PACK)
apt download PACK		(download pack)
apt list --installed		(lists installed packages)
dpkg -i PACK			(install .deb PACK)
sh -c "CMD  > OUTPUT"		(running a string converted to a command for sudo outputting purposes)
shutdown -h			(poweroff)
reboot				(reboot)
stat FILE			(detailed file information)
/proc/partitions		(list of partitions)
mkfs /dev/sdX			(make a linux filesystem on the device)
mkfs.ext4, mkfs.vfat DVC	(filesystem format on device DVC)
fdisk -l			(manages disks, creates , partitions, this one in particular shows disk info)
blkid DVC			(block id, shows the unique id of a blockdevice DVC)
/etc/fstab			(file to write devices to be mounted on startup)
find DIR -name FILE*		(find FILE  in directory DIR)
find DIR -mtime +-DAY		(find files in DIR with modified times within days DAY -1= last day)
find DIR -atime -size -user -group -perm  (find files in DIR with access times, sizes, users, groups, permissions)
whereis COMMAND			(finds the utility COMMAND directory and also the manual pages location)
/proc/meminfo			(complete informtion about all memories)
echo -e "expression\n" >FILE	(-e expression in echo allows parsing the escape characters)
sort < FILE1 > FILE2		(combining the input file with output file FILE2)	
tee FILE1 FILE2...		(reads from standard input and write to standard output and files FILE1, FILE2....etc)
wc FILE				(calculates number of wors, lines characters)
xargs COMMAND			(takes arguments from stdin (file) and uses them as arguments of a command COMMAND)
wget URL			(download file from URL)
dmesg				(kernel logs)
echo $?				(echoes the exit status of the last command)
diff FILE1 FILE2		(lists differences between  FILE1 and FILE2)
md5sum FILE*			(calculates checksum on FILE*)
watch -nS COMM			(executes COMM every S seconds)





 




















